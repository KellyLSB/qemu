From: P J P <ppandit@redhat.com>
Date: Fri, 18 Dec 2015 11:35:07 +0530
Subject: i386: avoid null pointer dereference
Bug-Debian: https://bugs.debian.org/811201

    Hello,

A null pointer dereference issue was reported by Mr Ling Liu, CC'd here. It
occurs while doing I/O port write operations via hmp interface. In that,
'current_cpu' remains null as it is not called from cpu_exec loop, which
results in the said issue.

Below is a proposed (tested)patch to fix this issue; Does it look okay?

===
From ae88a4947fab9a148cd794f8ad2d812e7f5a1d0f Mon Sep 17 00:00:00 2001
From: Prasad J Pandit <pjp@fedoraproject.org>
Date: Fri, 18 Dec 2015 11:16:07 +0530
Subject: [PATCH] i386: avoid null pointer dereference

When I/O port write operation is called from hmp interface,
'current_cpu' remains null, as it is not called from cpu_exec()
loop. This leads to a null pointer dereference in vapic_write
routine. Add check to avoid it.

Reported-by: Ling Liu <liuling-it@360.cn>
Signed-off-by: Prasad J Pandit <pjp@fedoraproject.org>
Message-Id: <alpine.LFD.2.20.1512181129320.9805@wniryva>
Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
---
 hw/i386/kvmvapic.c | 15 ++++++++++-----
 1 file changed, 10 insertions(+), 5 deletions(-)

Mjt: this is a backport to 1.x versions of qemu,
where this routine were a bit different.

diff --git a/hw/kvmvapic.c b/hw/kvmvapic.c
index 5d83625..06c5e14 100644
--- a/hw/kvmvapic.c
+++ b/hw/kvmvapic.c
@@ -610,6 +610,9 @@ static void vapic_write(void *opaque, target_phys_addr_t addr, uint64_t data,
     target_phys_addr_t rom_paddr;
     VAPICROMState *s = opaque;
 
+    if (!env) {
+        return;
+    }
     cpu_synchronize_state(env);
 
     /*
